𝗝𝗦 𝗖𝗵𝗮𝗹𝗹𝗲𝗻𝗴𝗲 𝗜𝗜

𝗧𝗮𝘀𝗸𝘀
𝟭. 𝗜𝗻𝘃𝗲𝗻𝘁𝗼𝗿𝘆 𝗧𝗿𝗮𝗰𝗸𝗲𝗿

𝗧-𝗱𝗶𝗮𝗴𝗿𝗮𝗺:

𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲	 					𝗩𝗮𝗹𝘂𝗲
inventory		    | ["apple", "banana", "cherry", "date", "elderberry"]
inventoryCount		| [10, 15, 5, 20, 7]
i			        | 0 - 1 - 2 - 3 - 4
inventory[i]		| "apple" - "banana" - "cherry" - "date" - "elderberry"
inventoryCount[i]	| 10 - 15 - 5 - 20 - 7

𝗢𝘂𝘁𝗽𝘂𝘁:

apple: 10
banana: 15
cherry: 5
date: 20
elderberry: 7


𝟮. 𝗔𝗹𝗽𝗵𝗮𝗯𝗲𝘁𝗶𝗰𝗮𝗹 𝗦𝗼𝗿𝘁𝗶𝗻𝗴

𝗧-𝗱𝗶𝗮𝗴𝗿𝗮𝗺:

𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲	 					𝗩𝗮𝗹𝘂𝗲
words (before)		| ["zebra", "apple", "mango", "cherry", "banana"]
i			        | 0 - 1 - 2 - 3 - 4
j			        | 1 - 2 - 3 - 4 (Nested Loop)
Swapping		    | "zebra" - "apple" - "zebra" - "mango" - "zebra" - "cherry" - "zebra" - "banana"
words (after)		| ["apple", "banana", "cherry", "mango", "zebra"]

𝗢𝘂𝘁𝗽𝘂𝘁:

["apple", "banana", "cherry", "mango", "zebra"]


𝟯. 𝗨𝗻𝗶𝗾𝘂𝗲 𝗔𝗿𝗿𝗮𝘆 𝗕𝘂𝗶𝗹𝗱𝗲𝗿

𝗧-𝗱𝗶𝗮𝗴𝗿𝗮𝗺:

𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲	 					𝗩𝗮𝗹𝘂𝗲
uniqueNumbers		| [] - [3] - [3, 5] - [3, 5, 6] - [3, 5, 6, 7] - [3, 5, 6, 7, 8] - ...
randomNumber		| Random generated number between 1 to 20
exists			    | false if the number is unique, true if duplicate
Condition Checking	| if exists === false, randomNumber is pushed to uniqueNumbers

𝗢𝘂𝘁𝗽𝘂𝘁:

[9,  3, 14,  8, 6, 7, 19, 16, 11, 5]


𝟰. 𝗧𝗿𝗶𝗮𝗻𝗴𝗹𝗲 𝗖𝗵𝗲𝗰𝗸𝗲𝗿

𝗧-𝗱𝗶𝗮𝗴𝗿𝗮𝗺:

𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲	 					𝗩𝗮𝗹𝘂𝗲
sideA			    | 7
sideB			    | 10
sideC			    | 5
Condition Checking	| (7 + 10 > 5) && (10 + 5 > 7) && (7 + 5 > 10)
Result			    | true since all conditions are met

𝗢𝘂𝘁𝗽𝘂𝘁:

The sides 7, 10, and 5 form a valid triangle.